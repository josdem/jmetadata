plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.josdem.jmetadata'
version = '1.2.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = 'com.josdem.jmetadata.Launcher'
}

ext {
    audioTaggerVersion = '2.0.3'
    retrofitVersion = '2.11.0'
    junitVersion = '5.9.0'
    slf4jVersion = '2.0.16'
    aspectjVersion = '1.9.22.1'
    messengineVersion = '0.1.0'
    festSwingVersion = '1.2.1'
    javaXmlBindVersion = '2.3.1'
    javaAnnotationVersion = '1.3.2'
    commonsLangVersion = '3.12.0'
    mockitoVersion = '3.12.4'
    mockitoAllVersion = '1.10.19'
    targetDir = "src/main/java/com/josdem/jmetadata"
    lastfmApiKey = project.hasProperty('lastfmApiKey') ? project.getProperty('lastfmApiKey') : null
    lastfmApiSecret = project.hasProperty('lastfmApiSecret') ? project.getProperty('lastfmApiSecret') : null
}

// Task to package with credentials
tasks.register('prepareDist') {
    doLast {
        if (!lastfmApiKey || !lastfmApiSecret) {
            throw new GradleException("LastFM API Key and Secret are required.")
        }
        println("Packaging with LastFM API credentials")
    }
}

// Pass properties to the application
tasks.named('distZip') {
    dependsOn 'prepareDist'
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

spotless {
    java {
        target fileTree('.') {
            include 'src/**/*.java'
            exclude '/build/**'
        }
        googleJavaFormat()
        removeUnusedImports()
        endWithNewline()
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation "org.aspectj:aspectjtools:$aspectjVersion"
    implementation "org:jaudiotagger:$audioTaggerVersion"
    implementation "org.asmatron:messengine:$messengineVersion"
    implementation "org.apache.commons:commons-lang3:$commonsLangVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "javax.xml.bind:jaxb-api:$javaXmlBindVersion"
    implementation "javax.annotation:javax.annotation-api:$javaAnnotationVersion"
    implementation "org.easytesting:fest-swing:$festSwingVersion"
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation files('lib/last.fm-bindings-0.1.0.jar')
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

test {
    useJUnitPlatform()
}

test.dependsOn("spotlessApply")

tasks.register('settingCredentials') {
    ant.replace(file: "${targetDir}/Auth.java", token: "LASTFM_API_KEY", value: "${LASTFM_API_KEY}")
    ant.replace(file: "${targetDir}/Auth.java", token: "LASTFM_API_SECRET", value: "${LASTFM_API_SECRET}")
}
